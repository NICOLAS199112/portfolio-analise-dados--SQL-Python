# -*- coding: utf-8 -*-
"""Untitled23.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WXe9XSP5U6iU_nHCPfnW5tlbUC3DaCF7

Uma empresa solicitou a uma consultoria um diagnóstico de seu Serviço de Suporte a Clientes. Com base no diagnóstico a partir da análise de dados, a empresa pretende entender quais são as oportunidades de melhorias dos produtos e serviços ofertados.   

Considerando a base **dados_suporte_tecnico.xlsx**, extraia dos dados informações para auxiliar o diagnóstico.  

Como roteiro, responda às perguntas:  

a) Interessado em saber quais são os tempos médios de atendimento (TMA), você decidiu utilizar o conceito de quartis. Qual seria o valor de tempo de atendimento que separaria os 25% dos tickets abertos?  

b) Há uma concentração de tickets em algum turno de trabalho?  

c) Divida os tempos TMA em intervalos baixo-médio-alto e faça sua análise. Quais são suas conclusões?  

d) Assim como para a métrica Tempo Médio de Atendimento (TMA), analisada anteriormente, faça uma análise similar para Taxa de Conversão de Atendimento.  

e) Crie uma tabela de frequência para Atendente e analise. Quais são suas conclusões?
"""

import pandas as pd
df = pd.read_excel('/content/Exercicio_suporte_tecnico.xlsx')
df.info()

df.head()

df['TMA'] = df['fim_atendimento'] - df['inicio_atendimento']
df_tma = df['TMA']
df_tma

df['TMA'].describe() # uma maneira trazendo todos os calculos estaditicos

df1 = df['TMA'].quantile(0.25)
df1   # trazendo o quartil ao 25% para comparar se realmente e o valor, e mostrar outra forma de fazer

"""Resposta: para um 25% de nossa base temos um tempo de TMA de 18 minutos

b) Há uma concentração de tickets em algum turno de trabalho?
"""

conc = df.groupby('turno')['ticket_id'].sum()
conc    #podemos verificar que a maior concentração de tickets e no periodo da noite

freq_conc_rel = df.groupby('turno')['ticket_id'].sum()*100/df['ticket_id'].sum()
freq_conc_rel

fre_acum_conc = freq_conc_rel.cumsum()
fre_acum_conc

df_conc = pd.DataFrame({'turno': conc.index, 'freq_relativa%': freq_conc_rel.values, 'freq_acuulada%': fre_acum_conc.values})
df_conc

"""Resosta: podemos verificar que a maior concentração de tickets e no periodo da noite, por outro lado 80% dos resultados representam manha e noite.

c) Divida os tempos TMA em intervalos baixo-médio-alto e faça sua análise. Quais são suas conclusões?
"""

df_inter = pd.cut(df_tma,3)
df_inter.value_counts()

df_inter = pd.cut(df_tma,3,labels=['baixo','medio','alto'])
df_inter.value_counts()

contagem = df_inter.value_counts()

freq_rel_cont = contagem*100 / contagem.sum()
freq_rel_cont

"""Resposta: Podemos observar que 40% do TMA  tem um contagem alta de diferencia de tempos

d) Assim como para a métrica Tempo Médio de Atendimento (TMA), analisada anteriormente, faça uma análise similar para Taxa de Conversão de Atendimento.
"""

conversao_atendim= df['conversao_atendimento'].value_counts()*100/df['conversao_atendimento'].count()
conversao_atendim

"""Podemos verificar que a maior taxa de conversão não converteu em atendimento no cliente

e) Crie uma tabela de frequência para Atendente e analise. Quais são suas conclusões?
"""

atendente = df['atendente_nome'].value_counts()
atendente

atendente = df['atendente_nome'].value_counts()*100/df['atendente_nome'].count()
atendente

"""Insigth: Podemos concluir que Lucas Martins tem a maior taxa de atendimentos seguido de Ana Paula."""

