# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OrueGv3cQh31UcBuPtfDFdTQCD9NctTx

Aplicação 1

Problema: Você deseja verificar o comportamento de distribuição uniforme no sorteio de números da mega-sena. Para isso faça uma simulação de 10 milhão de sorteios e depois verifique a frequência com que cada número foi sorteado.
'''
"""

import random
from collections import Counter

num_posiv = range(1,61)

num_sorteos = 10000000

num_sorteados = []

for _ in range(num_sorteos):
  sorteio = random.sample(num_posiv,6) #sorteia 6 unicos numeros
  num_sorteados.extend(sorteio)    #adiciona este sorteio dentro da variavel numeros sorteados

#cuenta quantas vezes todos os numeros foram sorteados

contagem_num = Counter(num_sorteados)

num_frequentes = contagem_num.most_common(10)

num_frequentes #verificamos os 10 numeros mais frequentes

"""
Aplicação 2

Vendas de Produto Bancário

O Banco XPTOKW fez um levantamento de clientes que após tentativas de vendas de determinado produto financeiro, observaram quais aceitaram o produto e quais não aceitaram. Entretanto, para melhorar a eficiência de suas vendas eles te contrataram para realizar a análise destes dados e mostrar a eles algumas soluções para maximizar a eficiência em novas vendas.

Uma primeira reunião foi realizada contigo e um arquivo com os dados que eles levantaram foi te encaminhado, o arquivo se chama bank_marketing.xlsx (disponível em Materiais Complementares).

Com os dados em mãos, você iniciou sua análise exploratória para responder as questões levantadas durante a reunião:

Qual o % de clientes que compraram o Título?
Quais profissões com maiores frequências são responsáveis por cerca de 80% da base?"""

import pandas as pd
from collections import Counter
import numpy as np

dados_excel = pd.read_excel('/content/bank_marketing (1).xlsx')  #importamos nosso arquivo de excel

dados_excel[:5] #consultamos nosso banco de dados

dados_excel.keys()  #consultamos as chaves ou campos do arquivo

dados_excel['Unnamed: 1'][1:] #verificamos a coluna dos compradores para evaluar o analise de calculos

qtd_comprados = []
qtd_nao_comprados = []

qtd_comprados = (dados_excel['Unnamed: 1'][1:].str.strip().str.lower() == 'sim').sum()
qtd_nao_comprados = (dados_excel['Unnamed: 1'][1:].str.strip().str.lower() == 'não').sum()

qtd_comprados = int(qtd_comprados)
qtd_nao_comprados = int(qtd_nao_comprados)

qtd_comprados  #consultamos se foi calculado corretamente a quqnatidade de pessoas que compraram

qtd_nao_comprados #consultamos se foi calculado corretamente a quqnatidade de pessoas que não compraram

total_interac = qtd_comprados + qtd_nao_comprados

total_interac

porc_comprado = (qtd_comprados / total_interac) * 100

porc_comprado #a quantidade de porcentagem que compraram foi do:

"""

*   Item 2 Quais profissões com maiores frequências são responsáveis por cerca de 80% da base?

"""

profissoes = []   #criamos um conjunto onde carregaremos as profissoes

for i in dados_excel['Unnamed: 3']:
      profissoes.append(i)

profissoes[0:3] #consultamos se carrego corretamente

qtd_freq_prof = Counter(profissoes)   #contamos a frequencia de professoes

ord_freq = qtd_freq_prof.most_common()  #ordenamos de forma decrescente

ord_freq

total_registro = sum(qtd_freq_prof.values())

total_registro

limite #representa o 80% de inegrantes da base

# Inicializando as variáveis
soma_acumulada = 0
prof_80_percent = []
for prof, freq in ord_freq:
    soma_acumulada += freq  # somando a frequência da profissão
    prof_80_percent.append((prof, freq))  # adicionando a profissão na lista
    if soma_acumulada >= limite:
        break  # Paramos quando atingimos 80% do total

prof_80_percent  #as profissões que representam o 80% da base são:

